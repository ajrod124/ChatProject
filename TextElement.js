// Generated by CoffeeScript 1.12.2
(function() {
  var Image, React, ReactNative, StyleSheet, Text, TextElement, View, baseURL, moment, styles;

  React = require('react');

  ReactNative = require('react-native');

  moment = require('moment');

  baseURL = 'https://fathomless-retreat-96857.herokuapp.com';

  Text = ReactNative.Text, View = ReactNative.View, StyleSheet = ReactNative.StyleSheet, Image = ReactNative.Image;

  TextElement = React.createClass({displayName: "TextElement",
    getInitialState: function() {
      return {
        user: null
      };
    },
    componentWillMount: function() {
      return this.getUser();
    },
    getUser: function() {
      var i, len, ref, results, user;
      ref = this.props.users;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        user = ref[i];
        if (this.props.message.userId === user._id) {
          results.push(this.setState({
            user: user
          }));
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    render: function() {
      if (this.props.displayExtra) {
        return React.createElement(View, {
          "style": {
            flexDirection: 'row'
          }
        }, React.createElement(Image, {
          "style": styles.avatar,
          "source": {
            uri: 'http://fathomless-retreat-96857.herokuapp.com' + this.state.user.avatar
          }
        }), React.createElement(View, null, React.createElement(View, {
          "style": {
            flexDirection: 'row',
            paddingBottom: 9
          }
        }, React.createElement(Text, {
          "style": styles.name
        }, this.state.user.username), React.createElement(Text, {
          "style": styles.time
        }, moment(this.props.message.time).calendar())), React.createElement(Text, {
          "style": styles.text
        }, this.props.message.message)));
      } else {
        return React.createElement(Text, {
          "style": [
            styles.text, {
              marginLeft: 60
            }
          ]
        }, this.props.message.message);
      }
    }
  });

  styles = StyleSheet.create({
    avatar: {
      marginTop: 3,
      marginBottom: 7,
      marginLeft: 15,
      marginRight: 15,
      height: 30,
      width: 30,
      borderRadius: 15
    },
    name: {
      fontSize: 10,
      color: '#4d0099'
    },
    time: {
      paddingTop: 1.5,
      paddingLeft: 5,
      fontSize: 8,
      color: '#444444'
    },
    text: {
      paddingBottom: 9,
      fontSize: 10,
      color: '#cccccc'
    }
  });

  module.exports = TextElement;

}).call(this);
