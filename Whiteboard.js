// Generated by CoffeeScript 1.12.2
(function() {
  var PropTypes, RCTWhiteboard, React, ReactNative, UIManager, View, Whiteboard, requireNativeComponent;

  React = require('react');

  ReactNative = require('react-native');

  PropTypes = React.PropTypes;

  requireNativeComponent = ReactNative.requireNativeComponent, View = ReactNative.View, UIManager = ReactNative.UIManager;

  Whiteboard = React.createClass({displayName: "Whiteboard",
    _onChange: function(event) {
      return this.props.onPaint(event);
    },
    undo: function() {
      return UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTWhiteboard.Commands.undo, []);
    },
    redo: function() {
      return UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTWhiteboard.Commands.redo, []);
    },
    clear: function() {
      return UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTWhiteboard.Commands.clear, []);
    },
    paintRemote: function(obj) {
      var bbggrr, color, hexColor;
      hexColor = obj.color;
      bbggrr = hexColor.substr(4, 2) + hexColor.substr(2, 2) + hexColor.substr(0, 2);
      color = parseInt(bbggrr, 16);
      return UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTWhiteboard.Commands.paintRemote, [obj.normalizedX, obj.normalizedY, color, obj.action]);
    },
    render: function() {
      return React.createElement(RCTWhiteboard, {
        "style": this.props.style,
        "onChange": this._onChange
      });
    }
  });

  Whiteboard.propTypes = View.propTypes;

  Whiteboard.propTypes.color = PropTypes.number;

  Whiteboard.propTypes.onPaint = PropTypes.func;

  RCTWhiteboard = requireNativeComponent('RCTWhiteboard', Whiteboard, {
    nativeOnly: {
      onChange: true
    }
  });

  module.exports = Whiteboard;

}).call(this);
